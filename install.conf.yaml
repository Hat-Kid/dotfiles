- defaults:
    link:
        create: true
        force: true

- clean: ['~']

- link:
    ~/.scripts:
        path: scripts/
        create: true
    ~/.gitconfig: gitconfig
    ~/.zshrc: zshrc
    ~/.zsh_profile: zsh_profile
    ~/.Xmodmap: Xmodmap
    ~/.xinitrc: xinitrc
    ~/.nanorc: nanorc
    ~/.config/nvim/init.vim:
        path: config/nvim/init.vim
        create: true
    ~/.config/i3:
        path: config/i3/
        create: true
    ~/.config/i3status-rust:
        path: config/i3status-rust/
        create: true
    ~/.config/mpv/mpv.conf:
        path: config/mpv/mpv.conf
        create: true
    ~/.config/mpv/input.conf:
        path: config/mpv/input.conf
        create: true
    ~/.config/htop:
        path: config/htop/
        create: true
    ~/.config/picom:
        path: config/picom/
        create: true
    ~/.config/rofi:
        path: config/rofi/
        create: true
    ~/.config/ranger/rc.conf:
        path: config/ranger/rc.conf
        create: true
    ~/.config/sxiv:
        path: config/sxiv/
        create: true
    ~/.config/dunst:
        path: config/dunst/
        create: true
    ~/.config/gtk-3.0/settings.ini:
        path: config/gtk-3.0/settings.ini
        create: true
    ~/.config/gtk-3.0/colors.css:
        path: config/gtk-3.0/colors.css
        create: true
    ~/.config/gtk-3.0/gtk.css:
        path: config/gtk-3.0/gtk.css
        create: true
    ~/.config/gtk-3.0/window_decorations.css:
        path: config/gtk-3.0/window_decorations.css
        create: true
    ~/.config/kitty/kitty.conf:
        path: config/kitty/kitty.conf
        create: true
    ~/.config/kitty/open-actions.conf:
        path: config/kitty/open-actions.conf
        create: true
    ~/.config/kitty/current-theme.conf:
        path: config/kitty/current-theme.conf
        create: true
    ~/.config/Thunar/uca.xml:
        path: config/Thunar/uca.xml
        create: true

- shell:
    - [if [ -f $(which zsh) ]; then chsh -s $(which zsh); fi, Changing shell to zsh...]
    - [if [ ! -d $HOME/.oh-my-zsh ]; then sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh); fi", Installing Oh My Zsh...]
    - [if [ -f .zshrc-pre-oh-my-zsh ]; then rm .zshrc && mv .zshrc-pre-oh-my-zsh .zshrc; fi, Replacing omz default zshrc...]
    - [git clone https://github.com/TamCore/autoupdate-oh-my-zsh-plugins.git $HOME/.oh-my-zsh/plugins/autoupdate, Installing autoupdate plugin...]
    - [git clone https://github.com/jocelynmallon/zshmarks.git $HOME/.oh-my-zsh/plugins/zshmarks, Installing zshmarks plugin...]
    - [git clone https://github.com/zsh-users/zsh-autosuggestions.git $HOME/.oh-my-zsh/plugins/zsh-autosuggestions, Installing zsh-autosuggestions plugin...]
    - [git clone https://github.com/zsh-users/zsh-completions.git $HOME/.oh-my-zsh/plugins/zsh-completions, Installing zsh-completions plugin...]
    - [git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.oh-my-zsh/plugins/zsh-syntax-highlighting, Installing zsh-syntax-highlighting plugin...]